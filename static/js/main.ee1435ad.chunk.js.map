{"version":3,"sources":["serviceWorker.js","api/weather.js","redux/sagas/weatherSaga/type.js","redux/sagas/weatherSaga/saga.js","redux/sagas/index.js","redux/sagas/weatherSaga/reducer.js","redux/rootReducer.js","redux/configStore.js","components/Forecast.js","components/Weather.js","pages/DetailPage/styled.js","pages/DetailPage/index.js","redux/sagas/weatherSaga/actions.js","containers/DetailContainer.js","withRoot.js","pages/Base/index.js","components/CityList.js","pages/HomePage/styled.js","pages/HomePage/index.js","Router.js","index.js"],"names":["Boolean","window","location","hostname","match","env","runtimeEnv","API_URL","REACT_APP_API_URL","API_KEY","REACT_APP_API_KEY","getWeather","id","Axios","request","method","url","getWeatherForecast","getWeatherWorker","weatherSaga","cityID","payload","all","call","weather","forecast","put","type","data","message","takeLatest","root","fork","prevState","loading","error","reducers","history","combineReducers","router","connectRouter","createBrowserHistory","basename","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","applyMiddleware","routerMiddleware","run","sagas","Container","styled","div","ICON_URL","REACT_APP_ICON_URL","Forecast","props","list","city","name","country","groupedByDate","forEach","dt","dt_str","dayjs","unix","format","currentGroup","push","Object","keys","map","date_key","date_items","key","main","temp","temp_max","temp_min","Paper","style","padding","src","icon","alt","Weather","string","sys","description","datetime","verticalAlign","Math","round","charAt","toUpperCase","slice","DetailPage","this","params","getWeatherWatcher","Component","connect","state","dispatch","bindActionCreators","theme","createMuiTheme","palette","primary","light","green","dark","secondary","grey","text","disabled","hint","typography","useNextVariants","withRoot","CssBaseline","Base","classes","children","className","AppBar","position","Toolbar","Typography","title","variant","color","noWrap","to","link","grow","Box","ml5","bgcolor","withStyles","width","flexGrow","wordWrap","display","breakpoints","up","textDecoration","marginLeft","ListItem","p","component","MuiLink","value","CityList","cityList","HomePage","Routes","exact","path","DetailContainer","document","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee1435ad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Axios from \"axios\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\n\nconst env = runtimeEnv();\nconst API_URL = env.REACT_APP_API_URL;\nconst API_KEY = env.REACT_APP_API_KEY;\n\nexport function getWeather(id) {\n  return Axios.request({\n    method: \"get\",\n    url: `${API_URL}/weather?id=${id}&units=metric&appid=${API_KEY}`\n  });\n}\n\nexport function getWeatherForecast(id) {\n  return Axios.request({\n    method: \"get\",\n    url: `${API_URL}/forecast?id=${id}&units=metric&appid=${API_KEY}`\n  });\n}\n","export const GET_WEATHER__WATCHER = \"app/weather/GET_WEATHER__WATCHER\";\nexport const GET_WEATHER__SUCESS = \"app/weather/GET_WEATHER__SUCESS\";\nexport const GET_WEATHER__ERROR = \"app/weather/GET_WEATHER__ERROR\";\n","import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { getWeather, getWeatherForecast } from 'api/weather';\nimport { GET_WEATHER__ERROR, GET_WEATHER__SUCESS, GET_WEATHER__WATCHER } from './type';\n\nfunction* getWeatherWorker({ payload: cityID }) {\n\ttry {\n\t\tconst [weather, forecast] = yield all([\n      call(getWeather, cityID), \n      call(getWeatherForecast, cityID)\n    ]);\n\t\tyield put({\n\t\t\ttype: GET_WEATHER__SUCESS,\n\t\t\tpayload: { weather: weather.data, forecast: forecast.data },\n\t\t});\n\t} catch (e) {\n\t\tyield put({ type: GET_WEATHER__ERROR, payload: e.message });\n\t}\n}\n\nexport default function* weatherSaga() {\n\tyield takeLatest(GET_WEATHER__WATCHER, getWeatherWorker);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport weatherSaga from './weatherSaga/saga';\n\nexport default function* root() {\n  yield all([fork(weatherSaga)]);\n}\n","import { GET_WEATHER__ERROR, GET_WEATHER__SUCESS, GET_WEATHER__WATCHER } from './type';\n\nconst getInitialState = () => ({\n\tloading: false,\n\terror: '',\n\tweather: null,\n\tforecast: null,\n});\n\nexport default (prevState = getInitialState(), { type, payload }) => {\n\tswitch (type) {\n\t\t// weather\n\t\tcase GET_WEATHER__WATCHER:\n\t\t\treturn { ...prevState, loading: true };\n\t\tcase GET_WEATHER__SUCESS: {\n\t\t\tconst { weather, forecast } = payload;\n\t\t\treturn { ...prevState, weather, forecast, loading: false };\n\t\t}\n\t\tcase GET_WEATHER__ERROR: {\n\t\t\treturn { ...prevState, loading: false, error: payload };\n\t\t}\n\t\tdefault:\n\t\t\treturn prevState;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport weatherSaga from './sagas/weatherSaga/reducer';\n\nconst reducers = (history) =>\n\tcombineReducers({\n\t\tweatherSaga,\n\t\trouter: connectRouter(history),\n\t});\n\nexport default reducers;\n","import sagas from './sagas';\nimport { createBrowserHistory } from 'history';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './rootReducer';\n\nexport const history = createBrowserHistory({\n  basename: '/weather-app'\n});\nconst sagaMiddleware = createSagaMiddleware();\n\nlet composeEnhancers = compose;\n\nif (process.env.NODE_ENV === 'development') {\n  const composeWithDevToolsExtension =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n  if (typeof composeWithDevToolsExtension === 'function') {\n    composeEnhancers = composeWithDevToolsExtension;\n  }\n}\n\nconst store = createStore(\n  reducers(history),\n  composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\nimport styled from \"styled-components\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat( auto-fill, minmax(165px, 1fr) );\n  grid-gap: 24px;\n  padding-right: 16px;\n`;\n\n\nconst env = runtimeEnv();\nconst ICON_URL = env.REACT_APP_ICON_URL;\n\nconst Forecast = props => {\n  const {\n    list,\n    city: { name, country }\n  } = props;\n\n  const groupedByDate = {};\n  list.forEach(forecast => {\n    const { dt } = forecast;\n\n\n    const dt_str = dayjs.unix(dt).format(\"MMM DD\");\n    let currentGroup = groupedByDate[dt_str] || [];\n    currentGroup.push(forecast);\n    groupedByDate[dt_str] = currentGroup;\n  });\n\n  return (\n    <>\n      <h3>\n        Forecast in {name}, {country} in the next 5 days\n      </h3>\n      <ul>\n        {Object.keys(groupedByDate).map(date_key => {\n          let date_items = groupedByDate[date_key] || [];\n          return (\n            <div key={date_key}>\n              <p>\n                <strong>{date_key}</strong>\n              </p>\n              <Container>\n                {date_items.map(forecast => {\n                  const {\n                    dt,\n                    weather,\n                    main: { temp, temp_max, temp_min }\n                  } = forecast;\n                  return (\n                    <Paper style={{ padding: \"30px\" }} key={dt}>\n                      <p>\n                        {dayjs.unix(dt).format(\"HH:mm\")}\n                      </p>\n                      <img\n                        src={`${ICON_URL}/${weather[0].icon}.png`}\n                        alt={`Weather forecast in ${name}, ${country}`}\n                      />\n\n                      <p>\n                        <strong>Temp: {temp} °C</strong>\n                      </p>\n                      <p>\n                        <strong>Max: {temp_max} °C</strong>\n                      </p>\n                      <p>\n                        <strong>Min: {temp_min} °C</strong>\n                      </p>\n                    </Paper>\n                  );\n                })}\n              </Container>\n            </div>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Forecast;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\n\nconst env = runtimeEnv();\nconst ICON_URL = env.REACT_APP_ICON_URL;\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst Weather = props => {\n  const {\n    name,\n    weather,\n    dt,\n    sys: { country },\n    main: { temp }\n  } = props;\n  const { description, icon } = weather[0];\n  const datetime = dayjs.unix(dt).format(\"HH:mm MMM DD\");\n  return (\n    <>\n      <h3>\n        Now in {name}, {country}\n      </h3>\n      <h4>\n        <img\n          src={`${ICON_URL}/${icon}.png`}\n          alt={`Weather in ${name}, ${country}`}\n          style={{ verticalAlign: \"middle\" }}\n        />\n        {Math.round(temp)} °C\n      </h4>\n      <p>{capitalizeFirstLetter(description)}</p>\n      <span>{datetime}</span>\n    </>\n  );\n};\n\nexport default Weather;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { Component } from 'react';\nimport Forecast from '../../components/Forecast';\nimport Weather from '../../components/Weather';\nimport { Container } from './styled';\n\nclass DetailPage extends Component {\n  componentDidMount() {\n    const {\n      match: {\n        params: { id: cityID }\n      }\n    } = this.props;\n    this.props.getWeatherWatcher(cityID);\n  }\n  render() {\n    const { error, loading, weather, forecast } = this.props;\n    return (\n      <Container>\n        {loading && <p>Loading....</p>}\n        {weather && <Weather {...weather} />}\n        {forecast && <Forecast {...forecast} />}\n        {error && (\n          <p>\n            There is an error when requesting data: <b>{error}</b>\n          </p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default DetailPage;\n","import { GET_WEATHER__WATCHER } from './type';\n\nexport function getWeatherWatcher(id) {\n\treturn { type: GET_WEATHER__WATCHER, payload: id };\n}\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport DetailPage from 'pages/DetailPage';\nimport { getWeatherWatcher } from 'redux/sagas/weatherSaga/actions';\n\nconst mapStateToProps = state => {\n  const { loading, error, weather, forecast } = state.weatherSaga;\n  return {\n    loading,\n    error,\n    weather,\n    forecast\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ getWeatherWatcher }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailPage);\n","import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport React from 'react';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: green[500],\n\t\t\tmain: green[600],\n\t\t\tdark: green[800],\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: grey[300],\n\t\t\tmain: grey[400],\n\t\t\tdark: grey[700],\n\t\t},\n\t\ttext: {\n\t\t\tprimary: grey[900],\n\t\t\tsecondary: grey[800],\n\t\t\tdisabled: grey[400],\n\t\t\thint: grey[300],\n\t\t},\n\t},\n\ttypography: {\n\t\tuseNextVariants: true,\n\t},\n});\n\nfunction withRoot(Component) {\n\tfunction WithRoot(props) {\n\t\t// MuiThemeProvider makes the theme available down the React tree\n\t\t// thanks to React context.\n\t\treturn (\n\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t{/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</MuiThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n\nexport default withRoot;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport withRoot from \"withRoot\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    wordWrap: \"anywhere\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  ml5: {\n    marginLeft: \"20px\"\n  }\n});\n\nclass Base extends Component {\n  render() {\n    const { classes, children } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography\n              className={classes.title}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n            >\n              <Link to=\"/\" className={classes.link}>\n                Weather App\n              </Link>\n            </Typography>\n            <div className={classes.grow} />\n          </Toolbar>\n        </AppBar>\n        <Box className={classes.ml5} bgcolor=\"#f5f5f5\">\n          {children}\n        </Box>\n      </div>\n    );\n  }\n}\n\nBase.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withRoot(withStyles(styles)(Base));\n","import React from \"react\";\n\nimport { Link } from 'react-router-dom';\nimport MuiLink from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst ListItem = props => {\n  return (\n    <Paper>\n      <Box p={1}>\n        <Link to={`/detail/${props.id}`} component={MuiLink}>\n          <span>\n            <strong>{props.value}</strong>\n          </span>\n        </Link>\n      </Box>\n    </Paper>\n  );\n};\n\nconst CityList = props => {\n  const cityList = props.cityList;\n  return cityList.map(city => (\n    <ListItem key={city.id} value={city.name} id={city.id} />\n  ));\n};\n\nexport default CityList;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr) );\n  grid-template-rows: repeat(auto-fit, minmax(50px, 1fr) );\n  grid-gap: 24px;\n  padding-right: 16px;\n`;\n","import React, { Component } from \"react\";\n\nimport CityList from \"components/CityList\";\nimport { Container } from \"./styled.js\";\nimport cityList from \"./city.json\";\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Please click city to view weather details</h2>\n        <Container>\n          <CityList cityList={cityList} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport { history } from './redux/configStore';\n\nimport DetailContainer from './containers/DetailContainer';\nimport Base from './pages/Base';\nimport HomePage from './pages/HomePage/';\n\nexport default class Routes extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t<Base>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t\t\t<Route path=\"/detail/:id\" component={DetailContainer} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Base>\n\t\t\t</ConnectedRouter>\n\t\t);\n\t}\n}\n","import './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Router';\nimport store from './redux/configStore';\n\ndocument.title = 'Weather App';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Routes />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}